{"remainingRequest":"C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\wamp64\\www\\requestportal\\frontend\\src\\store\\modules\\task.module.js","dependencies":[{"path":"C:\\wamp64\\www\\requestportal\\frontend\\src\\store\\modules\\task.module.js","mtime":1558488601647},{"path":"C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\requestportal\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\wamp64\\\\www\\\\requestportal\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport TaskService from '../../services/task.service';\nvar task = {\n  namespaced: true,\n  state: {\n    tasks: [],\n    task: {},\n    form: {\n      task: '',\n      description: '',\n      user_id: ''\n    }\n  },\n  getters: {\n    getAllTasks: function getAllTasks(state) {\n      return state.tasks;\n    } // getCompletedTodos (state) {\n    //   return state.todos.filter(item => item.is_completed)\n    // }, \n    // getPendingTodos (state) {\n    //   return state.todos.filter(item => !item.is_completed)\n    // }\n\n  },\n  mutations: {\n    FILL_TASKS: function FILL_TASKS(state, tasks) {\n      state.tasks = tasks;\n    }\n  },\n  actions: {\n    fillTasks: function () {\n      var _fillTasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref) {\n        var commit, tasks;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return TaskService.getAllTasks();\n\n              case 3:\n                tasks = _context.sent;\n                commit('FILL_TASKS', tasks.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fillTasks(_x) {\n        return _fillTasks.apply(this, arguments);\n      }\n\n      return fillTasks;\n    }()\n  }\n};\nexport default task;",{"version":3,"sources":["C:\\wamp64\\www\\requestportal\\frontend\\src\\store\\modules\\task.module.js"],"names":["TaskService","task","namespaced","state","tasks","form","description","user_id","getters","getAllTasks","mutations","FILL_TASKS","actions","fillTasks","commit","data"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,6BAAxB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELH,IAAAA,IAAI,EAAE,EAFD;AAGLI,IAAAA,IAAI,EAAE;AACJJ,MAAAA,IAAI,EAAE,EADF;AAEJK,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,OAAO,EAAE;AAHL;AAHD,GAFI;AAWXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACMN,KADN,EACa;AAClB,aAAOA,KAAK,CAACC,KAAb;AACD,KAHM,CAIP;AACA;AACA;AACA;AACA;AACA;;AATO,GAXE;AAsBXM,EAAAA,SAAS,EAAE;AACTC,IAAAA,UADS,sBACGR,KADH,EACUC,KADV,EACiB;AACxBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD;AAHQ,GAtBA;AA2BXQ,EAAAA,OAAO,EAAE;AACDC,IAAAA,SADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACWC,gBAAAA,MADX,QACWA,MADX;AAAA;AAAA,uBAEed,WAAW,CAACS,WAAZ,EAFf;;AAAA;AAECL,gBAAAA,KAFD;AAGLU,gBAAAA,MAAM,CAAC,YAAD,EAAeV,KAAK,CAACW,IAArB,CAAN;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3BE,CAAb;AAmCA,eAAed,IAAf","sourcesContent":["import TaskService from '../../services/task.service'\r\n\r\nconst task = {\r\n  namespaced: true,\r\n  state: {\r\n    tasks: [],\r\n    task: {},\r\n    form: {\r\n      task: '',\r\n      description: '',\r\n      user_id: ''\r\n    }\r\n  },\r\n  getters: {\r\n    getAllTasks (state) {\r\n      return state.tasks\r\n    }\r\n    // getCompletedTodos (state) {\r\n    //   return state.todos.filter(item => item.is_completed)\r\n    // }, \r\n    // getPendingTodos (state) {\r\n    //   return state.todos.filter(item => !item.is_completed)\r\n    // }\r\n  },\r\n  mutations: {\r\n    FILL_TASKS (state, tasks) {\r\n      state.tasks = tasks\r\n    }\r\n  },\r\n  actions: {\r\n    async fillTasks ({commit}) {\r\n      const tasks = await TaskService.getAllTasks()\r\n      commit('FILL_TASKS', tasks.data)\r\n    },\r\n  }\r\n}\r\n\r\nexport default task"]}]}